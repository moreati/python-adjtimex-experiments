import cffi

ffibuilder = cffi.FFI()

ffibuilder.cdef(
'''
/* time.h */

typedef int... time_t;

struct timeval {
    time_t  tv_sec;
    long    tv_usec;
};


/* sys/timex.h */

#define ADJ_OFFSET ...
#define ADJ_FREQUENCY ...
#define ADJ_MAXERROR ...
#define ADJ_ESTERROR ...
#define ADJ_STATUS ...
#define ADJ_TIMECONST ...
#define ADJ_SETOFFSET ...
#define ADJ_MICRO ...
#define ADJ_NANO ...
#define ADJ_TAI ...
#define ADJ_TICK ...
#define ADJ_OFFSET_SINGLESHOT ...
#define ADJ_OFFSET_SS_READ ...
#define ADJ_OFFSET_SS_READ ...

#define STA_PLL ...
#define STA_PPSFREQ ...
#define STA_PPSTIME ...
#define STA_FLL ...
#define STA_INS ...
#define STA_DEL ...
#define STA_UNSYNC ...
#define STA_FREQHOLD ...
#define STA_PPSSIGNAL ...
#define STA_PPSJITTER ...
#define STA_PPSWANDER ...
#define STA_PPSERROR ...
#define STA_CLOCKERR ...
#define STA_NANO ...
#define STA_MODE ...
#define STA_CLK ...

#define TIME_OK ...
#define TIME_INS ...
#define TIME_DEL ...
#define TIME_OOP ...
#define TIME_WAIT ...
#define TIME_ERROR ...

struct timex {
    int     modes;
    long    offset;
    long    freq;
    long    maxerror;
    long    esterror;
    int     status;
    long    constant;
    long    precision;
    long    tolerance;
    struct timeval time;
    long    tick;
    long    ppsfreq;
    long    jitter;
    int     shift;
    long    stabil;
    long    jitcnt;
    long    calcnt;
    long    errcnt;
    long    stbcnt;
    int     tai;
    ...;
};

int adjtimex(struct timex *buf);
int ntp_adjtime(struct timex *buf);
''')

ffibuilder.set_source(
'_adjtimex',
'''
#include <time.h>
#include <sys/timex.h>
''',
)
